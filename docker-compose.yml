version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    container_name: robert-portfolio-postgres
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-robert_portfolio}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - robert_network

  # FastAPI Backend
  api:
    container_name: robert-portfolio-api
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - APP_NAME=Robert Portfolio API
      - APP_ENV=development
      - DEBUG=True
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB:-robert_portfolio}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
      - CORS_ORIGINS=["http://localhost:3000","http://localhost:3001"]
    ports:
      - "${PORT:-8000}:8000"
    volumes:
      - ./app:/app/app
      - ./alembic:/app/alembic
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        sleep 5 &&
        alembic upgrade head &&
        uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
      "
    networks:
      - robert_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PgAdmin (Optional - for database management)
  pgadmin:
    container_name: robert-portfolio-pgadmin
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@admin.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - robert_network
    profiles:
      - tools

networks:
  robert_network:
    driver: bridge

volumes:
  postgres_data:
  pgadmin_data:

